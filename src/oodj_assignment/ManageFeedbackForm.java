/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oodj_assignment;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Point;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class ManageFeedbackForm extends javax.swing.JFrame {
    DefaultTableModel mymodel;

    /**
     * Creates new form ManageFeedbackForm
     */
    public ManageFeedbackForm() {
        initComponents();
        setVisible(true);
        fillTable();
        styleTable();
        setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE);
        
        setResizable(false);
        setTitle("Manage Feedback");
        // Set icon jframe icon
        URL iconURL = getClass().getResource("/img/main_icon.jpg");
        ImageIcon icon = new ImageIcon(iconURL);
        setIconImage(icon.getImage());
        /* center the jframe form */
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        
        
        /* Add double click mouse listener to jtable */
        tblFeedback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent mouseEvent) {
                JTable table =(JTable) mouseEvent.getSource();
                Point point = mouseEvent.getPoint();
                int row = table.rowAtPoint(point);
                if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
                    int a=JOptionPane.showConfirmDialog(rootPane,"Are you sure you want to delete this feedback?");  
                        if(a==JOptionPane.YES_OPTION){  
                            deleteRow(row);
                        }  
                    
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblFeedback = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblFeedback.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        tblFeedback.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        )
        {public boolean isCellEditable(int row, int column){return false;}}
    );
    tblFeedback.setRowHeight(30);
    tblFeedback.setShowVerticalLines(false);
    tblFeedback.getTableHeader().setReorderingAllowed(false);
    tblFeedback.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tblFeedbackMouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(tblFeedback);

    jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
    jLabel1.setText("Feedbacks");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
            .addContainerGap())
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel1)
            .addGap(273, 273, 273))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
            .addContainerGap())
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblFeedbackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFeedbackMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblFeedbackMouseClicked

    private void styleTable(){
        tblFeedback.getTableHeader().setFont(new Font("Cambria", Font.BOLD, 16));
        tblFeedback.getTableHeader().setOpaque(false);
        tblFeedback.getTableHeader().setBackground(new Color(32, 136, 203));
        tblFeedback.getTableHeader().setForeground(Color.white);
        tblFeedback.getTableHeader().setPreferredSize(new Dimension(0,40));
    }
    
    private void fillTable() {
        //fill table with column name
            String []columnNames = {"Name","Email","Feedback","Role"};
            mymodel = (DefaultTableModel) tblFeedback.getModel();
            mymodel.setColumnIdentifiers(columnNames); 
            //display columnnames on jtable
            mymodel.setRowCount(0);            
            tblFeedback.revalidate();
            
            
            try (BufferedReader br = new BufferedReader(new FileReader("txtfiles/Feedbacks.txt"))) 
            {
                Object records[] = br.lines().toArray();
                for(int index=0;index<records.length;index++){
                    String eachline = records[index].toString();
                    String []row = eachline.split(",");
                    String datarow[] = {row[0],row[1],row[2],row[3]};
                        mymodel.addRow(datarow);       
                }
                
                
            } catch (Exception e){
                e.printStackTrace();
            }
                
    }
    
    private void deleteRow(int row) {
        String tempFile = "txtfiles/temp.txt";
        String filepath = "txtfiles/Feedbacks.txt";
        File oldFile = new File(filepath);
        File newFile = new File(tempFile);
        FileWriter fw = null;
        PrintWriter pws = null;
        
        try(BufferedReader br = new BufferedReader(new FileReader("txtfiles/Feedbacks.txt")))
        {
            fw = new FileWriter(tempFile,true);
            pws = new PrintWriter(fw);      
           
            Object records[] = br.lines().toArray();
            for(int index=0; index < records.length; index++){
                String eachline = records[index].toString();
                String DataRow[] = eachline.split(",");
                
                if (index != row) {
                    pws.println(DataRow[0] + "," + DataRow[1] + "," 
                            + DataRow[2] + "," + DataRow[3]);
                }
       
            }

            JOptionPane.showMessageDialog(rootPane, "User Feedback Deleted", "Success", JOptionPane.INFORMATION_MESSAGE);

        }
        catch (Exception e){
            JOptionPane.showMessageDialog(rootPane, e, "Error", JOptionPane.INFORMATION_MESSAGE);
        }
        finally {
            if (fw != null){
                try {
                    fw.close();
                } catch (Exception ex){
                    JOptionPane.showMessageDialog(rootPane, ex , "Error", JOptionPane.WARNING_MESSAGE);
                }
            }
            
            if (pws != null) {
                pws.flush();
                pws.close(); 
            }
            
            if (oldFile.exists()){oldFile.delete();}    //Delete old file if exist
            File dump = new File(filepath);
            newFile.renameTo(dump);
            
        }
        fillTable(); //Repopulate table
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblFeedback;
    // End of variables declaration//GEN-END:variables
}
